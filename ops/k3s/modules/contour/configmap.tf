# Generated from Kubernetes ConfigMap: contour
# Namespace: contour
# API Version: v1
# Type: Standard Resource

resource "kubernetes_config_map" "contour" {
  metadata {
    name      = "contour"
    namespace = "contour"
  }

  data = {
    "contour.yaml" = "# Specify the Gateway API configuration.\n# gateway:\n#   namespace: contour\n#   name: contour\n#\n# should contour expect to be running inside a k8s cluster\n# incluster: true\n#\n# path to kubeconfig (if not running inside a k8s cluster)\n# kubeconfig: /path/to/.kube/config\n#\n# Disable RFC-compliant behavior to strip \"Content-Length\" header if\n# \"Tranfer-Encoding: chunked\" is also set.\n# disableAllowChunkedLength: false\n#\n# Disable Envoy's non-standard merge_slashes path transformation option\n# that strips duplicate slashes from request URLs.\n# disableMergeSlashes: false\n#\n# Disable HTTPProxy permitInsecure field\ndisablePermitInsecure: false\ntls:\n# minimum TLS version that Contour will negotiate\n# minimum-protocol-version: \"1.2\"\n# TLS ciphers to be supported by Envoy TLS listeners when negotiating\n# TLS 1.2.\n# cipher-suites:\n# - '[ECDHE-ECDSA-AES128-GCM-SHA256|ECDHE-ECDSA-CHACHA20-POLY1305]'\n# - '[ECDHE-RSA-AES128-GCM-SHA256|ECDHE-RSA-CHACHA20-POLY1305]'\n# - 'ECDHE-ECDSA-AES256-GCM-SHA384'\n# - 'ECDHE-RSA-AES256-GCM-SHA384'\n# Defines the Kubernetes name/namespace matching a secret to use\n# as the fallback certificate when requests which don't match the\n# SNI defined for a vhost.\n  fallback-certificate:\n#   name: fallback-secret-name\n#   namespace: contour\n  envoy-client-certificate:\n#   name: envoy-client-cert-secret-name\n#   namespace: contour\n####\n# ExternalName Services are disabled by default due to CVE-2021-XXXXX\n# You can re-enable them by setting this setting to `true`.\n# This is not recommended without understanding the security implications.\n# Please see the advisory at https://github.com/projectcontour/contour/security/advisories/GHSA-5ph6-qq5x-7jwc for the details.\n# enableExternalNameService: false\n##\n# Address to be placed in status.loadbalancer field of Ingress objects.\n# May be either a literal IP address or a host name.\n# The value will be placed directly into the relevant field inside the status.loadBalancer struct.\n# ingress-status-address: local.projectcontour.io\n### Logging options\n# Default setting\naccesslog-format: envoy\n# The default access log format is defined by Envoy but it can be customized by setting following variable.\n# accesslog-format-string: \"...\\n\"\n# To enable JSON logging in Envoy\n# accesslog-format: json\n# accesslog-level: info\n# The default fields that will be logged are specified below.\n# To customise this list, just add or remove entries.\n# The canonical list is available at\n# https://godoc.org/github.com/projectcontour/contour/internal/envoy#JSONFields\n# json-fields:\n#   - \"@timestamp\"\n#   - \"authority\"\n#   - \"bytes_received\"\n#   - \"bytes_sent\"\n#   - \"downstream_local_address\"\n#   - \"downstream_remote_address\"\n#   - \"duration\"\n#   - \"method\"\n#   - \"path\"\n#   - \"protocol\"\n#   - \"request_id\"\n#   - \"requested_server_name\"\n#   - \"response_code\"\n#   - \"response_flags\"\n#   - \"uber_trace_id\"\n#   - \"upstream_cluster\"\n#   - \"upstream_host\"\n#   - \"upstream_local_address\"\n#   - \"upstream_service_time\"\n#   - \"user_agent\"\n#   - \"x_forwarded_for\"\n#   - \"grpc_status\"\n#   - \"grpc_status_number\"\n#\n# default-http-versions:\n# - \"HTTP/2\"\n# - \"HTTP/1.1\"\n#\n# The following shows the default proxy timeout settings.\n# timeouts:\n#   request-timeout: infinity\n#   connection-idle-timeout: 60s\n#   stream-idle-timeout: 5m\n#   max-connection-duration: infinity\n#   delayed-close-timeout: 1s\n#   connection-shutdown-grace-period: 5s\n#   connect-timeout: 2s\n#\n# Envoy cluster settings.\n# cluster:\n#   configure the cluster dns lookup family\n#   valid options are: auto (default), v4, v6\n#   dns-lookup-family: auto\n#\n# Envoy network settings.\n# network:\n#   Configure the number of additional ingress proxy hops from the\n#   right side of the x-forwarded-for HTTP header to trust.\n#   num-trusted-hops: 0\n#   Configure the port used to access the Envoy Admin interface.\n#   admin-port: 9001\n#\n# Configure an optional global rate limit service.\n# rateLimitService:\n#   Identifies the extension service defining the rate limit service,\n#   formatted as <namespace>/<name>.\n#   extensionService: projectcontour/ratelimit\n#   Defines the rate limit domain to pass to the rate limit service.\n#   Acts as a container for a set of rate limit definitions within\n#   the RLS.\n#   domain: contour\n#   Defines whether to allow requests to proceed when the rate limit\n#   service fails to respond with a valid rate limit decision within\n#   the timeout defined on the extension service.\n#   failOpen: false\n#   Defines whether to include the X-RateLimit headers X-RateLimit-Limit,\n#   X-RateLimit-Remaining, and X-RateLimit-Reset (as defined by the IETF\n#   Internet-Draft linked below), on responses to clients when the Rate\n#   Limit Service is consulted for a request.\n#   ref. https://tools.ietf.org/id/draft-polli-ratelimit-headers-03.html\n#   enableXRateLimitHeaders: false\n#   Defines whether to translate status code 429 to grpc code RESOURCE_EXHAUSTED\n#   instead of the default UNAVAILABLE\n#   enableResourceExhaustedCode: false\n#\n# Global Policy settings.\n# policy:\n#   # Default headers to set on all requests (unless set/removed on the HTTPProxy object itself)\n#   request-headers:\n#     set:\n#       # example: the hostname of the Envoy instance that proxied the request\n#       X-Envoy-Hostname: %HOSTNAME%\n#       # example: add a l5d-dst-override header to instruct Linkerd what service the request is destined for\n#       l5d-dst-override: %CONTOUR_SERVICE_NAME%.%CONTOUR_NAMESPACE%.svc.cluster.local:%CONTOUR_SERVICE_PORT%\n#   # default headers to set on all responses (unless set/removed on the HTTPProxy object itself)\n#   response-headers:\n#     set:\n#       # example: Envoy flags that provide additional details about the response or connection\n#       X-Envoy-Response-Flags: %RESPONSE_FLAGS%\n#\n# metrics:\n#  contour:\n#    address: 0.0.0.0\n#    port: 8000\n#    server-certificate-path: /path/to/server-cert.pem\n#    server-key-path: /path/to/server-private-key.pem\n#    ca-certificate-path: /path/to/root-ca-for-client-validation.pem\n#  envoy:\n#    address: 0.0.0.0\n#    port: 8002\n#    server-certificate-path: /path/to/server-cert.pem\n#    server-key-path: /path/to/server-private-key.pem\n#    ca-certificate-path: /path/to/root-ca-for-client-validation.pem\n#\n# listener:\n#  connection-balancer: exact\n#  socket-options:\n#    tos: 64\n#    traffic-class: 64\n#\n# omEnforcedHealthListener:\n#   address: 0.0.0.0\n#   port: 8003\n"
  }
}

