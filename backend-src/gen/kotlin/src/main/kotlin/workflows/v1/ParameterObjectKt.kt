// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: f2/workflows/v1/workflows.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package workflows.v1;

@kotlin.jvm.JvmName("-initializeparameterObject")
public inline fun parameterObject(block: workflows.v1.ParameterObjectKt.Dsl.() -> kotlin.Unit): workflows.v1.ParameterObject =
  workflows.v1.ParameterObjectKt.Dsl._create(workflows.v1.ParameterObject.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `f2.workflows.v1.ParameterObject`
 */
public object ParameterObjectKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: workflows.v1.ParameterObject.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: workflows.v1.ParameterObject.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): workflows.v1.ParameterObject = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class FieldsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `map<string, .f2.workflows.v1.ParameterValue> fields = 1 [json_name = "fields"];`
     */
     public val fields: com.google.protobuf.kotlin.DslMap<kotlin.String, workflows.v1.ParameterValue, FieldsProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getFieldsMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.fieldsMap
      )
    /**
     * `map<string, .f2.workflows.v1.ParameterValue> fields = 1 [json_name = "fields"];`
     */
    @JvmName("putFields")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, workflows.v1.ParameterValue, FieldsProxy>
      .put(key: kotlin.String, value: workflows.v1.ParameterValue) {
         _builder.putFields(key, value)
       }
    /**
     * `map<string, .f2.workflows.v1.ParameterValue> fields = 1 [json_name = "fields"];`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setFields")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, workflows.v1.ParameterValue, FieldsProxy>
      .set(key: kotlin.String, value: workflows.v1.ParameterValue) {
         put(key, value)
       }
    /**
     * `map<string, .f2.workflows.v1.ParameterValue> fields = 1 [json_name = "fields"];`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeFields")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, workflows.v1.ParameterValue, FieldsProxy>
      .remove(key: kotlin.String) {
         _builder.removeFields(key)
       }
    /**
     * `map<string, .f2.workflows.v1.ParameterValue> fields = 1 [json_name = "fields"];`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllFields")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, workflows.v1.ParameterValue, FieldsProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, workflows.v1.ParameterValue>) {
         _builder.putAllFields(map)
       }
    /**
     * `map<string, .f2.workflows.v1.ParameterValue> fields = 1 [json_name = "fields"];`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearFields")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, workflows.v1.ParameterValue, FieldsProxy>
      .clear() {
         _builder.clearFields()
       }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun workflows.v1.ParameterObject.copy(block: `workflows.v1`.ParameterObjectKt.Dsl.() -> kotlin.Unit): workflows.v1.ParameterObject =
  `workflows.v1`.ParameterObjectKt.Dsl._create(this.toBuilder()).apply { block() }._build()

