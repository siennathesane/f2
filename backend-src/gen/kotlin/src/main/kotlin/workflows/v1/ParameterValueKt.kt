// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: f2/workflows/v1/workflows.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package workflows.v1;

@kotlin.jvm.JvmName("-initializeparameterValue")
public inline fun parameterValue(block: workflows.v1.ParameterValueKt.Dsl.() -> kotlin.Unit): workflows.v1.ParameterValue =
  workflows.v1.ParameterValueKt.Dsl._create(workflows.v1.ParameterValue.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `f2.workflows.v1.ParameterValue`
 */
public object ParameterValueKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: workflows.v1.ParameterValue.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: workflows.v1.ParameterValue.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): workflows.v1.ParameterValue = _builder.build()

    /**
     * `string string_value = 1 [json_name = "stringValue"];`
     */
    public var stringValue: kotlin.String
      @JvmName("getStringValue")
      get() = _builder.stringValue
      @JvmName("setStringValue")
      set(value) {
        _builder.stringValue = value
      }
    /**
     * `string string_value = 1 [json_name = "stringValue"];`
     */
    public fun clearStringValue() {
      _builder.clearStringValue()
    }
    /**
     * `string string_value = 1 [json_name = "stringValue"];`
     * @return Whether the stringValue field is set.
     */
    public fun hasStringValue(): kotlin.Boolean {
      return _builder.hasStringValue()
    }

    /**
     * `double number_value = 2 [json_name = "numberValue"];`
     */
    public var numberValue: kotlin.Double
      @JvmName("getNumberValue")
      get() = _builder.numberValue
      @JvmName("setNumberValue")
      set(value) {
        _builder.numberValue = value
      }
    /**
     * `double number_value = 2 [json_name = "numberValue"];`
     */
    public fun clearNumberValue() {
      _builder.clearNumberValue()
    }
    /**
     * `double number_value = 2 [json_name = "numberValue"];`
     * @return Whether the numberValue field is set.
     */
    public fun hasNumberValue(): kotlin.Boolean {
      return _builder.hasNumberValue()
    }

    /**
     * `bool bool_value = 3 [json_name = "boolValue"];`
     */
    public var boolValue: kotlin.Boolean
      @JvmName("getBoolValue")
      get() = _builder.boolValue
      @JvmName("setBoolValue")
      set(value) {
        _builder.boolValue = value
      }
    /**
     * `bool bool_value = 3 [json_name = "boolValue"];`
     */
    public fun clearBoolValue() {
      _builder.clearBoolValue()
    }
    /**
     * `bool bool_value = 3 [json_name = "boolValue"];`
     * @return Whether the boolValue field is set.
     */
    public fun hasBoolValue(): kotlin.Boolean {
      return _builder.hasBoolValue()
    }

    /**
     * `.f2.workflows.v1.ParameterObject object_value = 4 [json_name = "objectValue"];`
     */
    public var objectValue: workflows.v1.ParameterObject
      @JvmName("getObjectValue")
      get() = _builder.objectValue
      @JvmName("setObjectValue")
      set(value) {
        _builder.objectValue = value
      }
    /**
     * `.f2.workflows.v1.ParameterObject object_value = 4 [json_name = "objectValue"];`
     */
    public fun clearObjectValue() {
      _builder.clearObjectValue()
    }
    /**
     * `.f2.workflows.v1.ParameterObject object_value = 4 [json_name = "objectValue"];`
     * @return Whether the objectValue field is set.
     */
    public fun hasObjectValue(): kotlin.Boolean {
      return _builder.hasObjectValue()
    }

    /**
     * `.f2.workflows.v1.ParameterArray array_value = 5 [json_name = "arrayValue"];`
     */
    public var arrayValue: workflows.v1.ParameterArray
      @JvmName("getArrayValue")
      get() = _builder.arrayValue
      @JvmName("setArrayValue")
      set(value) {
        _builder.arrayValue = value
      }
    /**
     * `.f2.workflows.v1.ParameterArray array_value = 5 [json_name = "arrayValue"];`
     */
    public fun clearArrayValue() {
      _builder.clearArrayValue()
    }
    /**
     * `.f2.workflows.v1.ParameterArray array_value = 5 [json_name = "arrayValue"];`
     * @return Whether the arrayValue field is set.
     */
    public fun hasArrayValue(): kotlin.Boolean {
      return _builder.hasArrayValue()
    }
    public val valueCase: workflows.v1.ParameterValue.ValueCase
    @kotlin.jvm.JvmName("getValueCase")
      get() = _builder.getValueCase()

    public fun clearValue() {
      _builder.clearValue()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun workflows.v1.ParameterValue.copy(block: `workflows.v1`.ParameterValueKt.Dsl.() -> kotlin.Unit): workflows.v1.ParameterValue =
  `workflows.v1`.ParameterValueKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val workflows.v1.ParameterValueOrBuilder.objectValueOrNull: workflows.v1.ParameterObject?
  get() = if (hasObjectValue()) getObjectValue() else null

public val workflows.v1.ParameterValueOrBuilder.arrayValueOrNull: workflows.v1.ParameterArray?
  get() = if (hasArrayValue()) getArrayValue() else null

