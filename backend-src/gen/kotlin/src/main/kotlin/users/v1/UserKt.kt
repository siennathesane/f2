// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: f2/users/v1/users.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package users.v1;

@kotlin.jvm.JvmName("-initializeuser")
public inline fun user(block: users.v1.UserKt.Dsl.() -> kotlin.Unit): users.v1.User =
  users.v1.UserKt.Dsl._create(users.v1.User.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `f2.users.v1.User`
 */
public object UserKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: users.v1.User.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: users.v1.User.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): users.v1.User = _builder.build()

    /**
     * `string id = 1 [json_name = "id"];`
     */
    public var id: kotlin.String
      @JvmName("getId")
      get() = _builder.id
      @JvmName("setId")
      set(value) {
        _builder.id = value
      }
    /**
     * `string id = 1 [json_name = "id"];`
     */
    public fun clearId() {
      _builder.clearId()
    }

    /**
     * `string name = 2 [json_name = "name"];`
     */
    public var name: kotlin.String
      @JvmName("getName")
      get() = _builder.name
      @JvmName("setName")
      set(value) {
        _builder.name = value
      }
    /**
     * `string name = 2 [json_name = "name"];`
     */
    public fun clearName() {
      _builder.clearName()
    }

    /**
     * `string email = 3 [json_name = "email"];`
     */
    public var email: kotlin.String
      @JvmName("getEmail")
      get() = _builder.email
      @JvmName("setEmail")
      set(value) {
        _builder.email = value
      }
    /**
     * `string email = 3 [json_name = "email"];`
     */
    public fun clearEmail() {
      _builder.clearEmail()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun users.v1.User.copy(block: `users.v1`.UserKt.Dsl.() -> kotlin.Unit): users.v1.User =
  `users.v1`.UserKt.Dsl._create(this.toBuilder()).apply { block() }._build()

