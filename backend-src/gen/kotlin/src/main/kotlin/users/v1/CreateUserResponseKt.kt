// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: f2/users/v1/users.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package users.v1;

@kotlin.jvm.JvmName("-initializecreateUserResponse")
public inline fun createUserResponse(block: users.v1.CreateUserResponseKt.Dsl.() -> kotlin.Unit): users.v1.CreateUserResponse =
  users.v1.CreateUserResponseKt.Dsl._create(users.v1.CreateUserResponse.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `f2.users.v1.CreateUserResponse`
 */
public object CreateUserResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: users.v1.CreateUserResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: users.v1.CreateUserResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): users.v1.CreateUserResponse = _builder.build()

    /**
     * `.f2.users.v1.User user = 1 [json_name = "user"];`
     */
    public var user: users.v1.User
      @JvmName("getUser")
      get() = _builder.user
      @JvmName("setUser")
      set(value) {
        _builder.user = value
      }
    /**
     * `.f2.users.v1.User user = 1 [json_name = "user"];`
     */
    public fun clearUser() {
      _builder.clearUser()
    }
    /**
     * `.f2.users.v1.User user = 1 [json_name = "user"];`
     * @return Whether the user field is set.
     */
    public fun hasUser(): kotlin.Boolean {
      return _builder.hasUser()
    }

    public val CreateUserResponseKt.Dsl.userOrNull: users.v1.User?
      get() = _builder.userOrNull

    /**
     * `.f2.errors.v1.Error error = 2 [json_name = "error"];`
     */
    public var error: errors.v1.Error
      @JvmName("getError")
      get() = _builder.error
      @JvmName("setError")
      set(value) {
        _builder.error = value
      }
    /**
     * `.f2.errors.v1.Error error = 2 [json_name = "error"];`
     */
    public fun clearError() {
      _builder.clearError()
    }
    /**
     * `.f2.errors.v1.Error error = 2 [json_name = "error"];`
     * @return Whether the error field is set.
     */
    public fun hasError(): kotlin.Boolean {
      return _builder.hasError()
    }

    public val CreateUserResponseKt.Dsl.errorOrNull: errors.v1.Error?
      get() = _builder.errorOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun users.v1.CreateUserResponse.copy(block: `users.v1`.CreateUserResponseKt.Dsl.() -> kotlin.Unit): users.v1.CreateUserResponse =
  `users.v1`.CreateUserResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val users.v1.CreateUserResponseOrBuilder.userOrNull: users.v1.User?
  get() = if (hasUser()) getUser() else null

public val users.v1.CreateUserResponseOrBuilder.errorOrNull: errors.v1.Error?
  get() = if (hasError()) getError() else null

